datasource postgresql {
  url      = env("DATABASE_URL")
  provider = "postgresql"
}

generator client {
  provider = "prisma-client-js"
  output   = "node_modules/.prisma/client"
}

model User {
  id       Int        @id @default(autoincrement())
  nombre   String?
  apellido String?
  telefono String?
  email    String?    @unique
  password String?
  rol      Role?      @relation("Userrol", fields: [rolId], references: [id])
  rolId    Int?       @map("rol")
  cart     CartItem[] @relation("CartItemusuario")
  ordenes  Order[]    @relation("Orderusuario")

  @@index([rolId])
}

model Product {
  id                     Int            @id @default(autoincrement())
  articulo               String?
  nombre                 String?
  descripcion            String?
  status                 String?
  precio                 Int?
  tipoDePrenda           String?
  marca                  String?
  imagen                 ProductImage[] @relation("Product_imagen_many", references: [id])
  stock                  Stock[]        @relation("Product_stock_many", references: [id])
  from_CartItem_producto CartItem[]     @relation("CartItemproducto")
}

model ProductImage {
  id                    Int         @id @default(autoincrement())
  image                 Json?
  altText               String?
  from_Product_imagen   Product[]   @relation("Product_imagen_many", references: [id])
  from_OrderItem_imagen OrderItem[] @relation("OrderItem_imagen_many", references: [id])
}

model Stock {
  id                 Int       @id @default(autoincrement())
  color              String?
  cantidadTalle0     Int?
  cantidadTalle1     Int?
  cantidadTalle2     Int?
  cantidadTalle3     Int?
  cantidadTalle4     Int?
  cantidadTalle5     Int?
  cantidadTalle6     Int?
  cantidadTalle7     Int?
  from_Product_stock Product[] @relation("Product_stock_many", references: [id])
}

model Role {
  id                Int      @id @default(autoincrement())
  nombre            String?
  canManageProducts Boolean?
  canSeeOtherUsers  Boolean?
  canManageUsers    Boolean?
  canManageRoles    Boolean?
  canManageCart     Boolean?
  canManageOrders   Boolean?
  asignado          User[]   @relation("Userrol")
}

model OrderItem {
  id           Int            @id @default(autoincrement())
  articulo     String?
  nombre       String?
  descripcion  String?
  status       String?
  precio       Int?
  tipoDePrenda String?
  talle        String?
  color        String?
  cantidad     Int?
  marca        String?
  imagen       ProductImage[] @relation("OrderItem_imagen_many", references: [id])
  orden        Order?         @relation("OrderItemorden", fields: [ordenId], references: [id])
  ordenId      Int?           @map("orden")

  @@index([ordenId])
}

model CartItem {
  id         Int      @id @default(autoincrement())
  cantidad   Int?
  producto   Product? @relation("CartItemproducto", fields: [productoId], references: [id])
  productoId Int?     @map("producto")
  usuario    User?    @relation("CartItemusuario", fields: [usuarioId], references: [id])
  usuarioId  Int?     @map("usuario")

  @@index([productoId])
  @@index([usuarioId])
}

model Order {
  id        Int         @id @default(autoincrement())
  total     Int?
  charge    Int?
  items     OrderItem[] @relation("OrderItemorden")
  usuario   User?       @relation("Orderusuario", fields: [usuarioId], references: [id])
  usuarioId Int?        @map("usuario")

  @@index([usuarioId])
}