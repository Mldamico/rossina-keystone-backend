datasource postgresql {
  url      = env("DATABASE_URL")
  provider = "postgresql"
}

generator client {
  provider = "prisma-client-js"
  output   = "node_modules/.prisma/client"
}

model User {
  id                      Int        @id @default(autoincrement())
  nombre                  String?
  apellido                String?
  telefono                String?
  email                   String?    @unique
  password                String?
  passwordResetToken      String?
  passwordResetIssuedAt   DateTime?
  passwordResetRedeemedAt DateTime?
  rol                     Role?      @relation("Userrol", fields: [rolId], references: [id])
  rolId                   Int?       @map("rol")
  cart                    CartItem[] @relation("CartItemusuario")
  ordenes                 Order[]    @relation("Orderusuario")

  @@index([rolId])
}

model Product {
  id                     Int            @id @default(autoincrement())
  articulo               String?
  nombre                 String?
  descripcion            String?
  status                 String?
  precio                 Int?
  categoria              String?
  imagen                 ProductImage[] @relation("Product_imagen_many", references: [id])
  tipoDePrenda           TipoDePrenda?  @relation("ProducttipoDePrenda", fields: [tipoDePrendaId], references: [id])
  tipoDePrendaId         Int?           @map("tipoDePrenda")
  stock                  Stock[]        @relation("Stockproducto")
  marca                  Brand?         @relation("Productmarca", fields: [marcaId], references: [id])
  marcaId                Int?           @map("marca")
  from_CartItem_producto CartItem[]     @relation("CartItemproducto")

  @@index([tipoDePrendaId])
  @@index([marcaId])
}

model ProductImage {
  id                    Int         @id @default(autoincrement())
  image                 Json?
  altText               String?
  from_Product_imagen   Product[]   @relation("Product_imagen_many", references: [id])
  from_OrderItem_imagen OrderItem[] @relation("OrderItem_imagen_many", references: [id])
}

model Stock {
  id             Int      @id @default(autoincrement())
  color          String?
  nombreTalle1   String?
  cantidadTalle1 Int?
  nombreTalle2   String?
  cantidadTalle2 Int?
  nombreTalle3   String?
  cantidadTalle3 Int?
  nombreTalle4   String?
  cantidadTalle4 Int?
  nombreTalle5   String?
  cantidadTalle5 Int?
  nombreTalle6   String?
  cantidadTalle6 Int?
  nombreTalle7   String?
  cantidadTalle7 Int?
  producto       Product? @relation("Stockproducto", fields: [productoId], references: [id])
  productoId     Int?     @map("producto")

  @@index([productoId])
}

model Role {
  id                Int      @id @default(autoincrement())
  nombre            String?
  canManageProducts Boolean?
  canSeeOtherUsers  Boolean?
  canManageUsers    Boolean?
  canManageRoles    Boolean?
  canManageCart     Boolean?
  canManageOrders   Boolean?
  asignado          User[]   @relation("Userrol")
}

model OrderItem {
  id           Int            @id @default(autoincrement())
  articulo     String?
  nombre       String?
  descripcion  String?
  status       String?
  precio       Int?
  tipoDePrenda String?
  talle        String?
  color        String?
  cantidad     Int?
  marca        String?
  imagen       ProductImage[] @relation("OrderItem_imagen_many", references: [id])
  orden        Order?         @relation("OrderItemorden", fields: [ordenId], references: [id])
  ordenId      Int?           @map("orden")

  @@index([ordenId])
}

model CartItem {
  id         Int      @id @default(autoincrement())
  cantidad   Int?
  producto   Product? @relation("CartItemproducto", fields: [productoId], references: [id])
  productoId Int?     @map("producto")
  usuario    User?    @relation("CartItemusuario", fields: [usuarioId], references: [id])
  usuarioId  Int?     @map("usuario")

  @@index([productoId])
  @@index([usuarioId])
}

model Order {
  id        Int         @id @default(autoincrement())
  total     Int?
  charge    Int?
  items     OrderItem[] @relation("OrderItemorden")
  usuario   User?       @relation("Orderusuario", fields: [usuarioId], references: [id])
  usuarioId Int?        @map("usuario")

  @@index([usuarioId])
}

model Brand {
  id           Int            @id @default(autoincrement())
  marca        String?
  tipoDePrenda TipoDePrenda[] @relation("Brand_tipoDePrenda_many", references: [id])
  producto     Product[]      @relation("Productmarca")
}

model TipoDePrenda {
  id                      Int       @id @default(autoincrement())
  tipo                    String?
  producto                Product[] @relation("ProducttipoDePrenda")
  from_Brand_tipoDePrenda Brand[]   @relation("Brand_tipoDePrenda_many", references: [id])
}